1.   简单  1  两数之和
#include<stdio.h>
int main()
{int a,b,sum;
printf("请输入两个整数：");
scanf("%d%d",&a,&b);
sum=a+b;
printf("这两个数的和是: %d\n",sum);
return 0;
}



2.   简单  27  移除元素
#include <stdio.h>
int main()
{
int a[10]={1,3,3,2,5,1,1,5,6,6};
int i,j,k,x=10;/*x为数组中无重复有效元素的个数*/
for(i=0;i<x;i++)
{
for(j=i+1;j<x;j++)
{
if(a[i]==a[j])
{
x--;//发现重复时减1
for(k=j;k<x;k++)//移动数组
{
a[k]=a[k+1];
}
j--;
}
}
}
for(i=0;i<x;i++)printf("%d",a[i]);
printf("\n");
return 0;
}



3.   中等  2   两数相加
#include<stdio.h>
int main()
{int a,b;
char  c1,c2;
int sum;
scanf("%d%c1%d%c2",&a,%c1,&b,&c2);
if(c1=='+'&&c2=='=')
sum=a+b;
else
sum=0;
printf("%d",sum);
return 0;
	
	
 }



4.    简单  88  合并两个有序数列
#include<stdio.h>
void main()
{
	int a[10],b[10],c[20],i,ia,ib,ic;
	printf("please input the first array\n");
	for(i=0;i<10;i++)
	scanf("%d",&b[i]);
	printf("\n");https:
	ia=0;ib=0;ic=0;
	while(ia<10&&ib<10)
	{
		if(a[ia]<b[ib])
		{
			c[ic]=a[ia];
			ia++;
		}
		else{
			c[ic]=b[ib];
			ib++;
		}ic++;
	}
	while(ia<10)
	{
		c[ic]=b[ib];
		ib++;
	}
	for(i=0;i<20;i++)
	{
		printf("%5d",c[i]);
	}
}






5.   中等  15  三数之和
#include <stdio.h>
void main()
{

int a,b,c,s;

scanf("%d%d%d",&a,&b,&c);

s=a+b+c;

printf("%d\n",s);

}




6.    中等  8   字符串转换整数
#include <stdlib.h>
#include <stdio.h>
int main()
{
    int number1 = 123456;
    int number2 = -123456;
    char string[16] = {0};
    itoa(number1,string,10);
    printf("数字：%d 转换后的字符串为：%s\n",number1,string);
    itoa(number2,string,10);
    printf("数字：%d 转换后的字符串为：%s\n",number2,string);
    return 0;
}


7.  简单  7  整数反转
#include<stdio.h>
int main()
{int num;
scanf("%d",&num);
int temp =0;
while(num!=0){
	temp=temp*10+num%10;
	num=num/10;
}
printf("反转之后的数为：%d",temp);
return  0;}



8.   困难   4   寻找两个有序数组的中位数
int a[10010],b[10010],c[20020];
int main()
{
int n,i,j,k;
scanf("%d",&n);
for(i=1;i<=n;i++)
scanf("%d",&a[i]);
for(i=1;i<=n;i++)
scanf("%d",&b[i]);
for(i=1,j=1,k=1;i<=n&&j<=n;)
if(a[i]<b[j])
c[k++]=a[i++];
else
c[k++]=b[j++];
if(i>n) while(j<=n) c[k++]=b[j++];
if(j>n) while (i<=n) c[k++]=a[j++];
printf("%d",c[n]);
system ("pause");
return 0;
}
