给出两个?非空 的链表用来表示两个非负的整数。
其中，它们各自的位数是按照?逆序?的方式存储的，并且它们的每个节点只能存储?一位?数字。


如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。


您可以假设除了数字 0 之外，这两个数都不会以 0?开头。


示例：

输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)

输出：7 -> 0 -> 8

原因：342 + 465 = 807


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){
    struct ListNode *l3,*p,*q,*l;
    int n=0;
    l3=(struct ListNode*)malloc(sizeof(struct ListNode));
    l=l3;
    p=l1;q=l2;
    if(p&&q)
    {
        l->val=p->val+q->val+n;
        if(l->val>9)
        {
            l->val-=10;
            n=1;
        }
        else n=0;
        p=p->next;
        q=q->next;
        l->next=(struct ListNode*)malloc(sizeof(struct ListNode));
        l=l->next;
    }
    l=NULL;
    return l3;
}